<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ai.lifo.data.mapper.EventExecutionRecordMapper">
    <resultMap id="BaseResultMap" type="ai.lifo.data.entity.EventExecutionRecordEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="method_name" jdbcType="VARCHAR" property="methodName"/>
        <result column="job_name" jdbcType="VARCHAR" property="jobName"/>
        <result column="record_date" jdbcType="DATE" property="recordDate"/>
        <result column="capital_source" jdbcType="INTEGER" property="capitalSource"/>
        <result column="execute_times" jdbcType="INTEGER" property="executeTimes"/>
        <result column="failed_times" jdbcType="INTEGER" property="failedTimes"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,
        method_name,
        job_name,
        record_date,
        capital_source,
        execute_times,
        failed_times,
        created_at,
        updated_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from jsd_xd_event_execution_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from jsd_xd_event_execution_record
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="ai.lifo.data.entity.EventExecutionRecordEntity"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into jsd_xd_event_execution_record (method_name, job_name, record_date,
                                                   capital_source, execute_times, failed_times,
                                                   created_at, updated_at)
        values (#{methodName,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{recordDate,jdbcType=DATE},
                #{capitalSource,jdbcType=INTEGER}, #{executeTimes,jdbcType=INTEGER}, #{failedTimes,jdbcType=INTEGER},
                #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="ai.lifo.data.entity.EventExecutionRecordEntity" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into jsd_xd_event_execution_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="methodName != null">
                method_name,
            </if>
            <if test="jobName != null">
                job_name,
            </if>
            <if test="recordDate != null">
                record_date,
            </if>
            <if test="capitalSource != null">
                capital_source,
            </if>
            <if test="executeTimes != null">
                execute_times,
            </if>
            <if test="failedTimes != null">
                failed_times,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="methodName != null">
                #{methodName,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="recordDate != null">
                #{recordDate,jdbcType=DATE},
            </if>
            <if test="capitalSource != null">
                #{capitalSource,jdbcType=INTEGER},
            </if>
            <if test="executeTimes != null">
                #{executeTimes,jdbcType=INTEGER},
            </if>
            <if test="failedTimes != null">
                #{failedTimes,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="ai.lifo.data.entity.EventExecutionRecordEntity">
        <!--@mbg.generated-->
        update jsd_xd_event_execution_record
        <set>
            <if test="methodName != null">
                method_name = #{methodName,jdbcType=VARCHAR},
            </if>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="recordDate != null">
                record_date = #{recordDate,jdbcType=DATE},
            </if>
            <if test="capitalSource != null">
                capital_source = #{capitalSource,jdbcType=INTEGER},
            </if>
            <if test="executeTimes != null">
                execute_times = #{executeTimes,jdbcType=INTEGER},
            </if>
            <if test="failedTimes != null">
                failed_times = #{failedTimes,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="ai.lifo.data.entity.EventExecutionRecordEntity">
        <!--@mbg.generated-->
        update jsd_xd_event_execution_record
        set method_name    = #{methodName,jdbcType=VARCHAR},
            job_name       = #{jobName,jdbcType=VARCHAR},
            record_date    = #{recordDate,jdbcType=DATE},
            capital_source = #{capitalSource,jdbcType=INTEGER},
            execute_times  = #{executeTimes,jdbcType=INTEGER},
            failed_times   = #{failedTimes,jdbcType=INTEGER},
            created_at     = #{createdAt,jdbcType=TIMESTAMP},
            updated_at     = #{updatedAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findOneByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from jsd_xd_event_execution_record
        <where>
            <if test="methodName != null">
                and method_name = #{methodName,jdbcType=VARCHAR}
            </if>
            <if test="recordDate != null">
                and record_date = #{recordDate,jdbcType=DATE}
            </if>
        </where>
        order by id desc
        limit 1
    </select>
</mapper>